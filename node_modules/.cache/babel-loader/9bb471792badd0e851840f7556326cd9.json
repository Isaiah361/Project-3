{"ast":null,"code":"import _classCallCheck from \"/Users/angelwu2018/Desktop/Iron/project3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport axios from 'axios';\n\nvar UserService = function UserService() {\n  var _this = this;\n\n  _classCallCheck(this, UserService);\n\n  this.signup = function (username, password, firstname, lastname, email) {\n    return _this.service.post('/signup', {\n      username: username,\n      password: password,\n      firstname: firstname,\n      lastname: lastname,\n      email: email\n    }).then(function (response) {\n      return response.data;\n    });\n  };\n\n  this.login = function (username, password) {\n    return _this.service.post('/login', {\n      username: username,\n      password: password\n    }).then(function (response) {\n      return response.data;\n    });\n  };\n\n  this.loggedin = function () {\n    return _this.service.get('/loggedin').then(function (response) {\n      return response.data;\n    });\n  };\n\n  this.logout = function () {\n    return _this.service.post('/logout', {}).then(function (response) {\n      return response.data;\n    });\n  };\n\n  var service = axios.create({\n    baseURL: 'http://localhost:5000/api',\n    withCredentials: true\n  });\n  this.service = service;\n} //   axios.create allows you to preconfigure the url (and headers) of axios requests\n// so that when we make an axios request with that object, we pass in a url, and that url gets added onto the end of the url we created the axios object with\n;\n\nexport default UserService;","map":{"version":3,"sources":["/Users/angelwu2018/Desktop/Iron/project3/src/service/UserService.js"],"names":["axios","UserService","signup","username","password","firstname","lastname","email","service","post","then","response","data","login","loggedin","get","logout","create","baseURL","withCredentials"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,W,GAEJ,uBAAc;AAAA;;AAAA;;AAAA,OAaZC,MAbY,GAaH,UAACC,QAAD,EAAWC,QAAX,EAAoBC,SAApB,EAA8BC,QAA9B,EAAuCC,KAAvC,EAAiD;AACtD,WAAO,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,SAAlB,EAA6B;AAACN,MAAAA,QAAQ,EAARA,QAAD;AAAWC,MAAAA,QAAQ,EAARA,QAAX;AAAoBC,MAAAA,SAAS,EAATA,SAApB;AAA8BC,MAAAA,QAAQ,EAARA,QAA9B;AAAuCC,MAAAA,KAAK,EAALA;AAAvC,KAA7B,EACNG,IADM,CACD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAb;AAAA,KADP,CAAP;AAEH,GAhBW;;AAAA,OAmBZC,KAnBY,GAmBJ,UAACV,QAAD,EAAWC,QAAX,EAAwB;AAC5B,WAAO,KAAI,CAACI,OAAL,CAAaC,IAAb,CAAkB,QAAlB,EAA4B;AAACN,MAAAA,QAAQ,EAARA,QAAD;AAAWC,MAAAA,QAAQ,EAARA;AAAX,KAA5B,EACNM,IADM,CACD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAb;AAAA,KADP,CAAP;AAEH,GAtBW;;AAAA,OAyBZE,QAzBY,GAyBD,YAAK;AACZ,WAAO,KAAI,CAACN,OAAL,CAAaO,GAAb,CAAiB,WAAjB,EACNL,IADM,CACD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAb;AAAA,KADP,CAAP;AAEH,GA5BW;;AAAA,OA+BZI,MA/BY,GA+BH,YAAK;AACV,WAAO,KAAI,CAACR,OAAL,CAAaC,IAAb,CAAkB,SAAlB,EAA6B,EAA7B,EACNC,IADM,CACD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAb;AAAA,KADP,CAAP;AAEH,GAlCW;;AACZ,MAAIJ,OAAO,GAAGR,KAAK,CAACiB,MAAN,CAAa;AACzBC,IAAAA,OAAO,EAAE,2BADgB;AAEzBC,IAAAA,eAAe,EAAE;AAFQ,GAAb,CAAd;AAMA,OAAKX,OAAL,GAAeA,OAAf;AACD,C,CAGH;AACA;;;AA6BA,eAAeP,WAAf","sourcesContent":["import axios from 'axios';\n\n\nclass UserService {\n\n  constructor() {\n    let service = axios.create({\n      baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n\n\n    this.service = service;\n  }\n\n\n//   axios.create allows you to preconfigure the url (and headers) of axios requests\n// so that when we make an axios request with that object, we pass in a url, and that url gets added onto the end of the url we created the axios object with\n    signup = (username, password,firstname,lastname,email) => {\n        return this.service.post('/signup', {username, password,firstname,lastname,email})\n        .then(response => response.data)\n    }\n\n\n    login = (username, password) => {\n        return this.service.post('/login', {username, password})\n        .then(response => response.data)\n    }\n\n\n    loggedin = () =>{\n        return this.service.get('/loggedin')\n        .then(response => response.data)\n    }\n\n\n    logout = () =>{\n        return this.service.post('/logout', {})\n        .then(response => response.data)\n    }\n\n\n\n\n}\n\nexport default UserService;"]},"metadata":{},"sourceType":"module"}